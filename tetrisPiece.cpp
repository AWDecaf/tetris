#include "tetrisPiece.h"

//kind, rotation, horizontal,vertical
char mPieces [7][4][5][5] = {
//Square
	{
   		{
    			{0, 0, 0, 0, 0},
    			{0, 0, 0, 0, 0},
    			{0, 0, 2, 1, 0},
    			{0, 0, 1, 1, 0},
    			{0, 0, 0, 0, 0}
    		},
   		{
    			{0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0},
			{0, 0, 2, 1, 0},
			{0, 0, 1, 1, 0},
			{0, 0, 0, 0, 0}
	   	},
	   	{
			{0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0},
			{0, 0, 2, 1, 0},
			{0, 0, 1, 1, 0},
			{0, 0, 0, 0, 0}
    		},
   		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 2, 1, 0},
		    	{0, 0, 1, 1, 0},
		    	{0, 0, 0, 0, 0}
    		}
   	},

//Long
  	{
   		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0},
		    	{0, 1, 2, 1, 1},
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 1, 0, 0}, 
		    	{0, 0, 2, 0, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 1, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0},
		    	{1, 1, 2, 1, 0},
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 2, 0, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 0, 0, 0}
    		}
   	},
//L
	{
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 2, 0, 0},
		    	{0, 0, 1, 1, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0},
		    	{0, 1, 2, 1, 0},
		    	{0, 1, 0, 0, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 1, 1, 0, 0},
		    	{0, 0, 2, 0, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 1, 0},
		    	{0, 1, 2, 1, 0},
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0}
		}
	},
//Mirror L
	{
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 2, 0, 0},
		    	{0, 1, 1, 0, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 1, 0, 0, 0},
		    	{0, 1, 2, 1, 0},
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 1, 1, 0},
		    	{0, 0, 2, 0, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0},
		    	{0, 1, 2, 1, 0},
		    	{0, 0, 0, 1, 0},
		    	{0, 0, 0, 0, 0}
		}
	},
//N
	{
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 1, 0},
		    	{0, 0, 2, 1, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0},
		    	{0, 1, 2, 0, 0},
		    	{0, 0, 1, 1, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 1, 2, 0, 0},
		    	{0, 1, 0, 0, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 1, 1, 0, 0},
		    	{0, 0, 2, 1, 0},
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0}
		}
	},
//Mirror N
	{
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 2, 1, 0},
		    	{0, 0, 0, 1, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 2, 1, 0},
		    	{0, 1, 1, 0, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 1, 0, 0, 0},
		    	{0, 1, 2, 0, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 1, 1, 0},
		    	{0, 1, 2, 0, 0},
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0}
		}
	},
//T
	{
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 2, 1, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0},
		    	{0, 1, 2, 1, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 1, 2, 0, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 0, 0, 0, 0}
		},
		{
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 1, 0, 0},
		    	{0, 1, 2, 1, 0},
		    	{0, 0, 0, 0, 0},
		    	{0, 0, 0, 0, 0}
		}
	}
};

//kind, rotation, position
int mPiecesInitialPosition  [7][4][2] ={
//Square
  	{
		{-2, -3}, 
		{-2, -3},
		{-2, -3},
		{-2, -3}
   	},
//I
  	{
		{-2, -2},
		{-2, -3},
		{-2, -2},
		{-2, -3}
   	},
//L
  	{
		{-2, -3},
		{-2, -3},
		{-2, -3},
		{-2, -2}
   	},
//Mirror L
  	{
		{-2, -3},
		{-2, -2},
		{-2, -3},
		{-2, -3}
   	},
//N
  	{
		{-2, -3},
		{-2, -3},
		{-2, -3},
		{-2, -2}
   	},
//Mirror N
  	{
    		{-2, -3},
    		{-2, -3},
    		{-2, -3},
    		{-2, -2}
   	},
//T
  	{
    		{-2, -3},
    		{-2, -3},
    		{-2, -3},
    		{-2, -2}
   	},
};


int tetrisPiece::GetPieceType (int pPiece, int pRotate, int pX, int pY)
{
	return mPieces [pPiece][pRotate][pX][pY];
}


int tetrisPiece::GetXInitPos (int pPiece, int pRotate)
{
	return mPiecesInitialPosition [pPiece][pRotate][0];
}


int tetrisPiece::GetYInitialPosition (int pPiece, int pRotate)
{
	return GetYInitPos [pPiece][pRotate][1];
}

